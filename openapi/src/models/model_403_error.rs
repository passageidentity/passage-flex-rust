/*
 * Passage Management API
 *
 * Passage's management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Model403Error {
    #[serde(rename = "code")]
    pub code: Code,
    #[serde(rename = "error")]
    pub error: String,
}

impl Model403Error {
    pub fn new(code: Code, error: String) -> Model403Error {
        Model403Error { code, error }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Code {
    #[serde(rename = "cannot_create_organization_billing_portal_session")]
    CannotCreateOrganizationBillingPortalSession,
    #[serde(rename = "cannot_create_transaction")]
    CannotCreateTransaction,
    #[serde(rename = "cannot_delete_admin")]
    CannotDeleteAdmin,
    #[serde(rename = "cannot_delete_organization_member")]
    CannotDeleteOrganizationMember,
    #[serde(rename = "cannot_self_update_organization_member")]
    CannotSelfUpdateOrganizationMember,
    #[serde(rename = "operation_not_allowed")]
    OperationNotAllowed,
}

impl Default for Code {
    fn default() -> Code {
        Self::CannotCreateOrganizationBillingPortalSession
    }
}
