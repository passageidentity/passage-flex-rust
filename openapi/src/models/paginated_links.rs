/*
 * Passage Management API
 *
 * Passage's management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PaginatedLinks {
    #[serde(rename = "first")]
    pub first: Box<models::Link>,
    #[serde(rename = "last")]
    pub last: Box<models::Link>,
    #[serde(rename = "next")]
    pub next: Box<models::Link>,
    #[serde(rename = "previous")]
    pub previous: Box<models::Link>,
    #[serde(rename = "self")]
    pub param_self: Box<models::Link>,
}

impl PaginatedLinks {
    pub fn new(
        first: models::Link,
        last: models::Link,
        next: models::Link,
        previous: models::Link,
        param_self: models::Link,
    ) -> PaginatedLinks {
        PaginatedLinks {
            first: Box::new(first),
            last: Box::new(last),
            next: Box::new(next),
            previous: Box::new(previous),
            param_self: Box::new(param_self),
        }
    }
}
