/*
 * Passage Management API
 *
 * Passage's management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserSocialConnections {
    #[serde(rename = "apple", skip_serializing_if = "Option::is_none")]
    pub apple: Option<Box<models::AppleUserSocialConnection>>,
    #[serde(rename = "github", skip_serializing_if = "Option::is_none")]
    pub github: Option<Box<models::GithubUserSocialConnection>>,
    #[serde(rename = "google", skip_serializing_if = "Option::is_none")]
    pub google: Option<Box<models::GoogleUserSocialConnection>>,
}

impl UserSocialConnections {
    pub fn new() -> UserSocialConnections {
        UserSocialConnections {
            apple: None,
            github: None,
            google: None,
        }
    }
}

